{"version":3,"file":"static/js/85.3d829f22.chunk.js","mappings":"2PA+IA,EAnEoB,WAClB,IAAQA,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAoCE,EAAAA,EAAAA,UAAS,CAC3CC,KAAM,GACNC,OAAQ,KAFV,eAAOC,EAAP,KAAmBC,EAAnB,KAKA,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACdN,GAAc,SAAAO,GAAS,yBAAUA,GAAV,cAAsBV,EAAOS,GAA7B,GACxB,EAoBD,OACE,kBAAME,UAAU,gBAAgBC,SAZb,SAAAC,GACnBA,EAAEC,iBACEjB,EAAKkB,MAAK,SAAAC,GAAO,OAAIA,EAAQf,SAAWC,EAAWD,MAAlC,IACnBgB,MAAM,cAAD,OAAef,EAAWD,OAA1B,6BAGPI,EAAWH,GAZXC,EAAc,CACZH,KAAM,GACNC,OAAQ,KAaX,EAGC,kBAEE,kBAAOU,UAAU,4BAAjB,UACE,kBACEA,UAAU,uBACVO,KAAK,OACLlB,KAAK,OACLS,MAAOP,EAAWF,KAClBmB,SAAUb,EACVc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,mBAAOX,UAAU,4BAAjB,oBAEE,kBACEA,UAAU,uBACVO,KAAK,MACLlB,KAAK,SACLS,MAAOP,EAAWD,OAClBkB,SAAUb,EACVc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQX,UAAU,kBAAkBO,KAAK,SAAzC,2BAKL,EC5ID,EAAkC,gCAAlC,EAAgF,4B,oBC4ChF,EAlBe,WACb,IAAMK,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYd,KAAtB,IAC/BiB,GAAWC,EAAAA,EAAAA,MACjB,OACE,iBAAKhB,UAAWiB,EAAhB,WACE,kDACA,kBACEjB,UAAWiB,EACX5B,KAAK,SACLS,MAAOc,EACPJ,SAAU,SAAAN,GACRa,GAASG,EAAAA,EAAAA,IAAkBhB,EAAEL,cAAcC,OAC5C,MAIR,E,6BCzCYqB,EAAUC,EAAAA,EAAAA,QAAH,sIAQPC,EAAKD,EAAAA,EAAAA,GAAH,mECqFf,MA7CA,WACE,IAAQlC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAAwCoC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,WAElBZ,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,YAAYd,KAAtB,IAYrC,OACE,+BACE,UAACqB,EAAD,CAASnB,UAAU,WAAnB,WACE,SAACqB,EAAD,CAAIrB,UAAU,kBAAd,uBACA,eAAIA,UAAU,WAAd,SACGd,GAfmB,WAC1B,GAAKA,EAML,OAL8B,OAAIA,GAAMuC,QACtC,SAAApB,GAAO,OACLA,EAAQhB,KAAKqC,cAAcC,SAASf,EAAYc,gBAChDrB,EAAQf,OAAOqC,SAASf,EAFnB,GAKV,CAQSgB,GAAsBC,KAAI,YAA2B,IAAxBxC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQwC,EAAS,EAATA,GACzC,OACE,gBAAa9B,UAAU,iBAAvB,WACE,yBACGX,EADH,MACYC,MAEZ,mBACEiB,KAAK,SACLP,UAAU,oBACV+B,QAAS,kBAAMR,EAAcO,EAApB,EACTE,SAAUR,EAJZ,sBAJOM,EAcZ,UAKZ,EC7ED,EAZiB,WACf,OACE,iCACE,uCACA,SAAC,EAAD,KAEA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// import { useState } from 'react';\n\n// import {\n//   useFetchContactsQuery,\n//   useAddContactMutation,\n// } from '../../services/contactsAPI';\n\n// import './ContactForm.module.css';\n\n// export const ContactForm = () => {\n//   const [formFields, setFormFields] = useState({\n//     name: '',\n//     phone: '',\n//   });\n//   const { data } = useFetchContactsQuery();\n\n//   const [addContact] = useAddContactMutation();\n\n//   const handleChange = event => {\n//     const { name, value } = event.currentTarget;\n//     setFormFields(prevState => ({ ...prevState, [name]: value }));\n//   };\n\n//   const reset = () => {\n//     setFormFields({\n//       name: '',\n//       phone: '',\n//     });\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const oldСontact = data.some(contact => contact.phone === formFields.phone);\n//     if (oldСontact) {\n//       return alert(`This phone ${formFields.phone} is already in contacts`);\n//     }\n\n//     addContact(formFields);\n//     reset();\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         name=\"name\"\n//         value={formFields.name}\n//         onChange={handleChange}\n//         placeholder=\"Name\"\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//         required\n//       />\n//       <input\n//         type=\"tel\"\n//         name=\"phone\"\n//         value={formFields.phone}\n//         onChange={handleChange}\n//         placeholder=\"Phone\"\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//         title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +. For example +380670000000\"\n//         required\n//       />\n//       <button className=\"button\" type=\"submit\">\n//         Add contact\n//       </button>\n//     </form>\n//   );\n// };\nimport { useState } from 'react';\nimport './ContactForm.module.css';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'services/contactsAPI';\n\nconst ContactForm = () => {\n  const { data } = useGetContactsQuery();\n  const [formFields, setFormFields] = useState({\n    name: '',\n    number: '',\n  });\n\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setFormFields(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const reset = () => {\n    setFormFields({\n      name: '',\n      number: '',\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (data.some(contact => contact.number === formFields.number)) {\n      alert(`This phone ${formFields.number} is already in contacts`);\n      return;\n    }\n    addContact(formFields);\n\n    reset();\n  };\n\n  return (\n    <form className=\"contacts-form\" onSubmit={handleSubmit}>\n      Name\n      <label className=\"contacts-form__name-label\">\n        <input\n          className=\"contacts-form__input\"\n          type=\"text\"\n          name=\"name\"\n          value={formFields.name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className=\"contacts-form__name-label\">\n        Number\n        <input\n          className=\"contacts-form__input\"\n          type=\"tel\"\n          name=\"number\"\n          value={formFields.number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className=\"new-contact-btn\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","// import { useSelector, useDispatch } from 'react-redux';\n\n// import { filteredContacts, getFilter } from '../../redux/filterSlice';\n\n// import './Filter.module.css';\n\n// export const Filter = () => {\n//   const filter = useSelector(getFilter);\n//   const dispatch = useDispatch();\n//   return (\n//     <label>\n//       <input\n//         type=\"text\"\n//         name=\"filter\"\n//         value={filter}\n//         onChange={e => dispatch(filteredContacts(e.target.value))}\n//         placeholder=\"Find contacts by name or phone\"\n//       />\n//     </label>\n//   );\n// };\nimport React from 'react';\nimport './Filter.module.css';\nimport s from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { changeFilterValue } from '../../redux/contactsSlice';\n\nconst Filter = () => {\n  const filterValue = useSelector(state => state.filterValue.value);\n  const dispatch = useDispatch();\n  return (\n    <div className={s.filterContainer}>\n      <p>Find contacts by name</p>\n      <input\n        className={s.filterInput}\n        name=\"filter\"\n        value={filterValue}\n        onChange={e => {\n          dispatch(changeFilterValue(e.currentTarget.value));\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  list-style-type: square;\n  margin-left: auto;\n  margin-right: 0px;\n  max-width: 400px;\n  width: 400px;\n`;\n\nexport const H2 = styled.h2`\n  text-align: center;\n  font-size: 40px;\n`;\n","// import { useSelector } from 'react-redux';\n\n// import { getFilter } from '../../redux/filterSlice';\n// import {\n//   useFetchContactsQuery,\n//   useDeleteContactMutation,\n// } from '../../services/contactsAPI';\n\n// import css from './ContactList.module.css';\n\n// export const ContactList = () => {\n//   const { data: contacts } = useFetchContactsQuery();\n//   const filter = useSelector(getFilter);\n//   const [deleteContact] = useDeleteContactMutation();\n\n//   const filterContacts = contacts?.filter(\n//     contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n//       contact.phone.includes(filter)\n//   );\n//   return (\n//     <ul>\n//       {contacts &&\n//         filterContacts.map(({ id, name, phone }) => (\n//           <li key={id}>\n//             <p>\n//               {name}: {phone}\n//             </p>\n//             <button\n//               className={css.listDeleteButton}\n//               type=\"button\"\n//               onClick={() => deleteContact(id)}\n//             >\n//               Delete\n//             </button>\n//           </li>\n//         ))}\n//     </ul>\n//   );\n// };\nimport * as React from 'react';\n// import css from './ContactList.module.css';\nimport './ContactList.module.css';\nimport { useSelector } from 'react-redux/es/exports';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'services/contactsAPI';\nimport { Section, H2 } from './ContactList.styled';\n\nfunction ContactList() {\n  const { data } = useGetContactsQuery();\n  const [deleteContact, { isFetching }] = useDeleteContactMutation();\n\n  const filterValue = useSelector(state => state.filterValue.value);\n\n  const getFilteredContacts = () => {\n    if (!data) return;\n    const filteredContactsArray = [...data].filter(\n      contact =>\n        contact.name.toLowerCase().includes(filterValue.toLowerCase()) ||\n        contact.number.includes(filterValue)\n    );\n    return filteredContactsArray;\n  };\n\n  return (\n    <>\n      <Section className=\"contacts\">\n        <H2 className=\"contacts__title\">Contacts</H2>\n        <ul className=\"contacts\">\n          {data &&\n            getFilteredContacts().map(({ name, number, id }) => {\n              return (\n                <li key={id} className=\"contacts__item\">\n                  <p>\n                    {name} : {number}\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"contacts__del-btn\"\n                    onClick={() => deleteContact(id)}\n                    disabled={isFetching}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      </Section>\n    </>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["data","useGetContactsQuery","useState","name","number","formFields","setFormFields","useAddContactMutation","addContact","handleChange","event","currentTarget","value","prevState","className","onSubmit","e","preventDefault","some","contact","alert","type","onChange","pattern","title","required","filterValue","useSelector","state","dispatch","useDispatch","s","changeFilterValue","Section","styled","H2","useDeleteContactMutation","deleteContact","isFetching","filter","toLowerCase","includes","getFilteredContacts","map","id","onClick","disabled"],"sourceRoot":""}